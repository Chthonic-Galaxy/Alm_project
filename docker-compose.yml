services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/var/log/app:Z
    environment:
      - GEMINI_API=${GEMINI_API}
      - PGUSERNAME=${PGUSERNAME}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=db
      - PGPORT=5432
      - PGDATABASE=${PGDATABASE}
      # Add the XML server URL using the service name
      - XML_SERVER_URL=http://life-server
    depends_on:
      - db
      - redis
      - life-server
    networks:
      - app-network

  celery_worker:
    build: .
    command: celery -A analyzerservice.src.celery_app worker -l INFO
    environment:
      - GEMINI_API=${GEMINI_API}
      - PGUSERNAME=${PGUSERNAME}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=db
      - PGPORT=5432
      - PGDATABASE=${PGDATABASE}
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${PGUSERNAME}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    ports:
      - "5433:5432"
    networks:
      - app-network
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${PGUSERNAME} -d ${PGDATABASE}"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network
    # healthcheck:
    #   test: ["CMD", "redis-cli", "ping"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  life-server:
    image: nginx:latest
    ports:
      - "5500:80"
    volumes:
      - ./analyzerservice/fake:/usr/share/nginx/html
      - ./analyzerservice/fake/explorer.xml:/usr/share/nginx/html/explorer.xml
    working_dir: /var/www/html
    networks:
      - app-network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost/explorer.xml"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

networks:
  app-network:
    driver: bridge